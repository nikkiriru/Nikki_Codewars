// Write a function that takes a string of parentheses, and determines if the order of the parentheses is valid. The function should return true if the string is valid, and false if it's invalid.
// Examples
// "()"              =>  true
// ")(()))"          =>  false
// "("               =>  false
// "(())((()())())"  =>  true
// Constraints
// All inputs will be strings, consisting only of characters ( and ).
// Empty strings are considered balanced (and therefore valid), and will be tested.

func validParentheses(_ str: String) -> Bool {
    var count = 0
    for each in str {
        switch each {
            case "(": count += 1
            case ")": count -= 1
            default: print("Error"); return false
        }
        if count < 0 { return false }
    }
    let result = count == 0 ? true : false
    return result
}
